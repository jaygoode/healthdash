{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  userList: [],\n  currentUser: {\n    id: \"630a1ec68730e0a256ecf8dc\",\n    username: \"dragonaslayer1x\",\n    age: 19,\n    weight: 75,\n    firstname: \"jason\",\n    lastname: \"admin\",\n    email: \"admin@gmail.com\",\n    password: \"$2b$10$kBbRpmy2o4FLznWUv9qXLOvGsewlrKmLqLcJxnABHCJlvAOPEO7Li\",\n    role: \"admin\"\n  }\n};\nexport const getUsers = createAsyncThunk(\"getUsers\", async () => {\n  try {\n    const data = await fetch(\"https://localhost:5000/api/users\");\n    let result = await data.json();\n    return result;\n  } catch (error) {\n    return error.message;\n  }\n});\nexport const updateUser = createAsyncThunk(\"updateUser\", async update => {\n  try {\n    console.log(update);\n    const response = await fetch(`https://localhost:5000/api/users/`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(update)\n    });\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    return error.message;\n  }\n});\nexport const createUser = createAsyncThunk(\"createUser\", async user => {\n  const {\n    firstname,\n    lastname,\n    email,\n    password,\n    role,\n    age,\n    weight,\n    username\n  } = user;\n  try {\n    const response = await fetch(\"https://localhost:5000/api/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        firstname: firstname,\n        lastname: lastname,\n        password: password,\n        email: email,\n        role: role,\n        age: age,\n        username: username,\n        weight: weight\n      })\n    });\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (error) {\n    return error.message;\n  }\n});\nexport const deleteUser = createAsyncThunk(\"deleteUser\", async id => {\n  try {\n    const response = await fetch(`https://localhost:5000/api/users/${id}`, {\n      method: \"DELETE\"\n    });\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    return error.message;\n  }\n});\nexport const login = createAsyncThunk(\"login\", async credentials => {\n  const {\n    username,\n    password\n  } = credentials;\n  try {\n    const response = await fetch(\"https://localhost:5000/api/users/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        password: password,\n        username: username\n      })\n    });\n    const result = await response.json();\n    console.log(result);\n    return result;\n    // if (result) {\n    //   localStorage.setItem(\"token\", result);\n    //   const data = await fetch(\"http://localhost:5000/users\", {\n    //     headers: {\n    //       \"Content-Type\": \"application/json\",\n    //       Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    //     },\n    //   });\n    //   const user = await data.json();\n    //   return user;\n    // }\n    // return undefined;\n  } catch (error) {\n    return error.message;\n  }\n});\nconst userSlice = createSlice({\n  name: \"userReducer\",\n  initialState: initialState,\n  reducers: {\n    logout: state => {\n      state.currentUser = undefined;\n      localStorage.removeItem(\"token\");\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getUsers.fulfilled, (state, action) => {\n      state.userList = action.payload;\n      return state;\n    }).addCase(updateUser.fulfilled, (state, action) => {\n      state.userList.map(user => {\n        if (user.id === action.payload.id) {\n          user = action.payload;\n          return user;\n        }\n        return state;\n      });\n      if (state.currentUser && state.currentUser.id === action.payload.id) {\n        state.currentUser = action.payload;\n      }\n      return state;\n    }).addCase(createUser.fulfilled, (state, action) => {\n      if (state.currentUser && state.currentUser.role === \"customer\") {\n        state.currentUser = action.payload;\n      } else if (state.currentUser && state.currentUser.role === \"admin\") {\n        state.userList.push(action.payload);\n      }\n      return state;\n    }).addCase(deleteUser.fulfilled, (state, action) => {\n      return state;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.currentUser = action.payload;\n      console.log(action.payload);\n      return state;\n    });\n  }\n});\nexport const userReducer = userSlice.reducer;\nexport const {\n  logout\n} = userSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","userList","currentUser","id","username","age","weight","firstname","lastname","email","password","role","getUsers","data","fetch","result","json","error","message","updateUser","update","console","log","response","method","headers","body","JSON","stringify","createUser","user","deleteUser","login","credentials","userSlice","name","reducers","logout","state","undefined","localStorage","removeItem","extraReducers","builder","addCase","fulfilled","action","payload","map","push","userReducer","reducer","actions"],"sources":["C:/Users/johnny/fs11/healthdash/healthdash/client/src/redux/reducers/userReducer.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { User, Credentials, UserReducerState } from \"../../types/userTypes\";\r\n\r\nconst initialState: UserReducerState = {\r\n  userList: [],\r\n  currentUser: {\r\n    id: \"630a1ec68730e0a256ecf8dc\",\r\n    username: \"dragonaslayer1x\",\r\n    age: 19,\r\n    weight: 75,\r\n    firstname: \"jason\",\r\n    lastname: \"admin\",\r\n    email: \"admin@gmail.com\",\r\n    password: \"$2b$10$kBbRpmy2o4FLznWUv9qXLOvGsewlrKmLqLcJxnABHCJlvAOPEO7Li\",\r\n    role: \"admin\",\r\n  },\r\n};\r\n\r\nexport const getUsers = createAsyncThunk(\"getUsers\", async () => {\r\n  try {\r\n    const data = await fetch(\"https://localhost:5000/api/users\");\r\n    let result = await data.json();\r\n    return result;\r\n  } catch (error: any) {\r\n    return error.message;\r\n  }\r\n});\r\n\r\nexport const updateUser = createAsyncThunk(\r\n  \"updateUser\",\r\n  async (update: Partial<User>) => {\r\n    try {\r\n      console.log(update);\r\n      const response = await fetch(`https://localhost:5000/api/users/`, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(update),\r\n      });\r\n      const result = await response.json();\r\n      return result;\r\n    } catch (error: any) {\r\n      return error.message;\r\n    }\r\n  }\r\n);\r\n\r\nexport const createUser = createAsyncThunk(\"createUser\", async (user: User) => {\r\n  const { firstname, lastname, email, password, role, age, weight, username } =\r\n    user;\r\n  try {\r\n    const response = await fetch(\"https://localhost:5000/api/users\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        password: password,\r\n        email: email,\r\n        role: role,\r\n        age: age,\r\n        username: username,\r\n        weight: weight,\r\n      }),\r\n    });\r\n    const result = await response.json();\r\n    console.log(result);\r\n    return result;\r\n  } catch (error: any) {\r\n    return error.message;\r\n  }\r\n});\r\n\r\nexport const deleteUser = createAsyncThunk(\"deleteUser\", async (id: string) => {\r\n  try {\r\n    const response = await fetch(`https://localhost:5000/api/users/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    const result = await response.json();\r\n    return result;\r\n  } catch (error: any) {\r\n    return error.message;\r\n  }\r\n});\r\n\r\nexport const login = createAsyncThunk(\r\n  \"login\",\r\n  async (credentials: Credentials) => {\r\n    const { username, password } = credentials;\r\n    try {\r\n      const response = await fetch(\"https://localhost:5000/api/users/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          password: password,\r\n          username: username,\r\n        }),\r\n      });\r\n      const result = await response.json();\r\n      console.log(result);\r\n      return result;\r\n      // if (result) {\r\n      //   localStorage.setItem(\"token\", result);\r\n      //   const data = await fetch(\"http://localhost:5000/users\", {\r\n      //     headers: {\r\n      //       \"Content-Type\": \"application/json\",\r\n      //       Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\r\n      //     },\r\n      //   });\r\n      //   const user = await data.json();\r\n      //   return user;\r\n      // }\r\n      // return undefined;\r\n    } catch (error: any) {\r\n      return error.message;\r\n    }\r\n  }\r\n);\r\n\r\nconst userSlice = createSlice({\r\n  name: \"userReducer\",\r\n  initialState: initialState,\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.currentUser = undefined;\r\n      localStorage.removeItem(\"token\");\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(getUsers.fulfilled, (state, action: PayloadAction<User[]>) => {\r\n        state.userList = action.payload;\r\n        return state;\r\n      })\r\n      .addCase(updateUser.fulfilled, (state, action: PayloadAction<User>) => {\r\n        state.userList.map((user) => {\r\n          if (user.id === action.payload.id) {\r\n            user = action.payload;\r\n            return user;\r\n          }\r\n          return state;\r\n        });\r\n        if (state.currentUser && state.currentUser.id === action.payload.id) {\r\n          state.currentUser = action.payload;\r\n        }\r\n        return state;\r\n      })\r\n      .addCase(createUser.fulfilled, (state, action: PayloadAction<User>) => {\r\n        if (state.currentUser && state.currentUser.role === \"customer\") {\r\n          state.currentUser = action.payload;\r\n        } else if (state.currentUser && state.currentUser.role === \"admin\") {\r\n          state.userList.push(action.payload);\r\n        }\r\n        return state;\r\n      })\r\n      .addCase(deleteUser.fulfilled, (state, action: PayloadAction<User>) => {\r\n        return state;\r\n      })\r\n      .addCase(login.fulfilled, (state, action: PayloadAction<User>) => {\r\n        state.currentUser = action.payload;\r\n        console.log(action.payload);\r\n        return state;\r\n      });\r\n  },\r\n});\r\n\r\nexport const userReducer = userSlice.reducer;\r\nexport const { logout } = userSlice.actions;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}