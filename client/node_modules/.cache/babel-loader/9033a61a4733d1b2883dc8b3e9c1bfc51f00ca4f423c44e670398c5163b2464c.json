{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  activityList: [],\n  currentActivity: undefined\n};\nexport const getActivities = createAsyncThunk(\"getActivities\", async () => {\n  try {\n    const data = await fetch(\"https://localhost:5000/api/Activities\");\n    let result = await data.json();\n    return result;\n  } catch (error) {\n    return error.message;\n  }\n});\nexport const updateActivity = createAsyncThunk(\"updateActivity\", async update => {\n  try {\n    console.log(update);\n    const response = await fetch(`https://localhost:5000/api/Activities/`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(update)\n    });\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    return error.message;\n  }\n});\nexport const createActivity = createAsyncThunk(\"createActivity\", async activity => {\n  const {\n    id,\n    createTime,\n    endTime,\n    type,\n    intensity,\n    noteId,\n    userId\n  } = activity;\n  try {\n    const response = await fetch(\"https://localhost:5000/api/Activities\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        createTime,\n        endTime,\n        type,\n        intensity,\n        noteId,\n        userId\n      })\n    });\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (error) {\n    return error.message;\n  }\n});\nexport const deleteActivity = createAsyncThunk(\"deleteActivity\", async id => {\n  try {\n    const response = await fetch(`https://localhost:5000/api/Activities/${id}`, {\n      method: \"DELETE\"\n    });\n    const result = await response.json();\n    return result;\n  } catch (error) {\n    return error.message;\n  }\n});\nconst ActivitySlice = createSlice({\n  name: \"ActivityReducer\",\n  initialState: initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getActivities.fulfilled, (state, action) => {\n      state.currentActivity = action.payload;\n      return state;\n    }).addCase(updateActivity.fulfilled, (state, action) => {\n      state.activityList.map(Activity => {\n        if (Activity.id === action.payload.id) {\n          Activity = action.payload;\n          return Activity;\n        }\n        return state;\n      });\n      if (state.currentActivity && state.currentActivity.id === action.payload.id) {\n        state.currentActivity = action.payload;\n      }\n      return state;\n    }).addCase(createActivity.fulfilled, (state, action) => {\n      // if (state.currentActivity && state.currentActivity.role === \"customer\") {\n      state.currentActivity = action.payload;\n      // } else if (state.currentActivity && state.currentActivity.role === \"admin\") {\n      //   state.ActivityList.push(action.payload);\n      // }\n      return state;\n    }).addCase(deleteActivity.fulfilled, (state, action) => {\n      return state;\n    });\n  }\n});\nexport const ActivityReducer = ActivitySlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","initialState","activityList","currentActivity","undefined","getActivities","data","fetch","result","json","error","message","updateActivity","update","console","log","response","method","headers","body","JSON","stringify","createActivity","activity","id","createTime","endTime","type","intensity","noteId","userId","deleteActivity","ActivitySlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","map","Activity","ActivityReducer","reducer"],"sources":["C:/Users/johnny/fs11/healthdash/healthdash/client/src/redux/reducers/activityReducer.ts"],"sourcesContent":["import { createAsyncThunk, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { Activity, ActivityReducerState } from \"../../types/activityTypes\";\r\n\r\nconst initialState:ActivityReducerState = {\r\n  activityList:[],\r\n  currentActivity:undefined\r\n  };\r\n  \r\n  export const getActivities = createAsyncThunk(\"getActivities\", async () => {\r\n    try {\r\n      const data = await fetch(\"https://localhost:5000/api/Activities\");\r\n      let result = await data.json();\r\n      return result;\r\n    } catch (error: any) {\r\n      return error.message;\r\n    }\r\n  });\r\n  \r\n  export const updateActivity = createAsyncThunk(\r\n    \"updateActivity\",\r\n    async (update: Partial<Activity>) => {\r\n      try {\r\n        console.log(update);\r\n        const response = await fetch(`https://localhost:5000/api/Activities/`, {\r\n          method: \"PATCH\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(update),\r\n        });\r\n        const result = await response.json();\r\n        return result;\r\n      } catch (error: any) {\r\n        return error.message;\r\n      }\r\n    }\r\n  );\r\n  \r\n  export const createActivity = createAsyncThunk(\"createActivity\", async (activity: Activity) => {\r\n    const { id, createTime, endTime, type, intensity, noteId, userId } =\r\n      activity;\r\n    try {\r\n      const response = await fetch(\"https://localhost:5000/api/Activities\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          createTime,\r\n          endTime,\r\n          type,\r\n          intensity,\r\n          noteId,\r\n          userId\r\n        }),\r\n      });\r\n      const result = await response.json();\r\n      console.log(result);\r\n      return result;\r\n    } catch (error: any) {\r\n      return error.message;\r\n    }\r\n  });\r\n  \r\n  export const deleteActivity = createAsyncThunk(\"deleteActivity\", async (id: string) => {\r\n    try {\r\n      const response = await fetch(`https://localhost:5000/api/Activities/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      const result = await response.json();\r\n      return result;\r\n    } catch (error: any) {\r\n      return error.message;\r\n    }\r\n  });\r\n  \r\n  \r\n  \r\n  const ActivitySlice = createSlice({\r\n    name: \"ActivityReducer\",\r\n    initialState: initialState,\r\n    reducers: {\r\n      \r\n    },\r\n    extraReducers: (builder) => {\r\n      builder\r\n        .addCase(getActivities.fulfilled, (state, action: PayloadAction<Activity>) => {\r\n          state.currentActivity = action.payload;\r\n          return state;\r\n        })\r\n        .addCase(updateActivity.fulfilled, (state, action: PayloadAction<Activity>) => {\r\n          state.activityList.map((Activity) => {\r\n            if (Activity.id === action.payload.id) {\r\n              Activity = action.payload;\r\n              return Activity;\r\n            }\r\n            return state;\r\n          });\r\n          if (state.currentActivity && state.currentActivity.id === action.payload.id) {\r\n            state.currentActivity = action.payload;\r\n          }\r\n          return state;\r\n        })\r\n        .addCase(createActivity.fulfilled, (state, action: PayloadAction<Activity>) => {\r\n          // if (state.currentActivity && state.currentActivity.role === \"customer\") {\r\n            state.currentActivity = action.payload;\r\n          // } else if (state.currentActivity && state.currentActivity.role === \"admin\") {\r\n          //   state.ActivityList.push(action.payload);\r\n          // }\r\n          return state;\r\n        })\r\n        .addCase(deleteActivity.fulfilled, (state, action: PayloadAction<Activity>) => {\r\n          return state;\r\n        })\r\n      \r\n    },\r\n  });\r\n  \r\n  export const ActivityReducer = ActivitySlice.reducer;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}